package cn.com.cscec8b.bm.cntrmeasure.model.queries;

import cn.com.cscec8b.framework.model.common.CustomViewRowImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 02 14:44:08 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BmCntrConfirmVORowImpl extends CustomViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CntrVerifyHeaderId {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getCntrVerifyHeaderId();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setCntrVerifyHeaderId((Number)value);
            }
        }
        ,
        ProjectId {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getProjectId();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setProjectId((Number)value);
            }
        }
        ,
        CntrId {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getCntrId();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setCntrId((Number)value);
            }
        }
        ,
        CntrNumber {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getCntrNumber();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setCntrNumber((String)value);
            }
        }
        ,
        VerifyStartDate {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getVerifyStartDate();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setVerifyStartDate((Date)value);
            }
        }
        ,
        CntrName {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getCntrName();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setCntrName((String)value);
            }
        }
        ,
        CustomerName {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getCustomerName();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setCustomerName((String)value);
            }
        }
        ,
        CustomerNumber {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getCustomerNumber();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setCustomerNumber((String)value);
            }
        }
        ,
        ProjectNumber {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getProjectNumber();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setProjectNumber((String)value);
            }
        }
        ,
        ProjectName {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getProjectName();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setProjectName((String)value);
            }
        }
        ,
        VerifyEndDate {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getVerifyEndDate();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setVerifyEndDate((Date)value);
            }
        }
        ,
        DocumentNumber {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getDocumentNumber();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setDocumentNumber((String)value);
            }
        }
        ,
        CustomerId {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getCustomerId();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setCustomerId((Number)value);
            }
        }
        ,
        OwerConfirmQuantity {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getOwerConfirmQuantity();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setOwerConfirmQuantity((Number)value);
            }
        }
        ,
        ActualConfirmDate {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getActualConfirmDate();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setActualConfirmDate((Date)value);
            }
        }
        ,
        AlreadyConfirmAmount {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getAlreadyConfirmAmount();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setAlreadyConfirmAmount((Number)value);
            }
        }
        ,
        CurrentTransferAmount {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getCurrentTransferAmount();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setCurrentTransferAmount((Number)value);
            }
        }
        ,
        LeftConfirmAmount {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getLeftConfirmAmount();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setLeftConfirmAmount((Number)value);
            }
        }
        ,
        CurrentLeftConfirmAmount {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getCurrentLeftConfirmAmount();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setCurrentLeftConfirmAmount((Number)value);
            }
        }
        ,
        CurrentAlreadyConfirmAmount {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getCurrentAlreadyConfirmAmount();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setCurrentAlreadyConfirmAmount((Number)value);
            }
        }
        ,
        CurrentAllTransferAmount {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getCurrentAllTransferAmount();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setCurrentAllTransferAmount((Number)value);
            }
        }
        ,
        CurrentOwerConfirmQuantity {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getCurrentOwerConfirmQuantity();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setCurrentOwerConfirmQuantity((Number)value);
            }
        }
        ,
        TransferStatus {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getTransferStatus();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setTransferStatus((String)value);
            }
        }
        ,
        FinConfirmDocumentNumber {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getFinConfirmDocumentNumber();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setFinConfirmDocumentNumber((String)value);
            }
        }
        ,
        StmCustomersAndSitsLovVO1 {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getStmCustomersAndSitsLovVO1();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        StatusLookupLovVO1 {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getStatusLookupLovVO1();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        BmCntrCustomersLovVO1 {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getBmCntrCustomersLovVO1();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        StmBmConfirmedContractLovVO1 {
            public Object get(BmCntrConfirmVORowImpl obj) {
                return obj.getStmBmConfirmedContractLovVO1();
            }

            public void put(BmCntrConfirmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(BmCntrConfirmVORowImpl object);

        public abstract void put(BmCntrConfirmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CNTRVERIFYHEADERID = AttributesEnum.CntrVerifyHeaderId.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int CNTRID = AttributesEnum.CntrId.index();
    public static final int CNTRNUMBER = AttributesEnum.CntrNumber.index();
    public static final int VERIFYSTARTDATE = AttributesEnum.VerifyStartDate.index();
    public static final int CNTRNAME = AttributesEnum.CntrName.index();
    public static final int CUSTOMERNAME = AttributesEnum.CustomerName.index();
    public static final int CUSTOMERNUMBER = AttributesEnum.CustomerNumber.index();
    public static final int PROJECTNUMBER = AttributesEnum.ProjectNumber.index();
    public static final int PROJECTNAME = AttributesEnum.ProjectName.index();
    public static final int VERIFYENDDATE = AttributesEnum.VerifyEndDate.index();
    public static final int DOCUMENTNUMBER = AttributesEnum.DocumentNumber.index();
    public static final int CUSTOMERID = AttributesEnum.CustomerId.index();
    public static final int OWERCONFIRMQUANTITY = AttributesEnum.OwerConfirmQuantity.index();
    public static final int ACTUALCONFIRMDATE = AttributesEnum.ActualConfirmDate.index();
    public static final int ALREADYCONFIRMAMOUNT = AttributesEnum.AlreadyConfirmAmount.index();
    public static final int CURRENTTRANSFERAMOUNT = AttributesEnum.CurrentTransferAmount.index();
    public static final int LEFTCONFIRMAMOUNT = AttributesEnum.LeftConfirmAmount.index();
    public static final int CURRENTLEFTCONFIRMAMOUNT = AttributesEnum.CurrentLeftConfirmAmount.index();
    public static final int CURRENTALREADYCONFIRMAMOUNT = AttributesEnum.CurrentAlreadyConfirmAmount.index();
    public static final int CURRENTALLTRANSFERAMOUNT = AttributesEnum.CurrentAllTransferAmount.index();
    public static final int CURRENTOWERCONFIRMQUANTITY = AttributesEnum.CurrentOwerConfirmQuantity.index();
    public static final int TRANSFERSTATUS = AttributesEnum.TransferStatus.index();
    public static final int FINCONFIRMDOCUMENTNUMBER = AttributesEnum.FinConfirmDocumentNumber.index();
    public static final int STMCUSTOMERSANDSITSLOVVO1 = AttributesEnum.StmCustomersAndSitsLovVO1.index();
    public static final int STATUSLOOKUPLOVVO1 = AttributesEnum.StatusLookupLovVO1.index();
    public static final int BMCNTRCUSTOMERSLOVVO1 = AttributesEnum.BmCntrCustomersLovVO1.index();
    public static final int STMBMCONFIRMEDCONTRACTLOVVO1 = AttributesEnum.StmBmConfirmedContractLovVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BmCntrConfirmVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CntrVerifyHeaderId.
     * @return the CntrVerifyHeaderId
     */
    public Number getCntrVerifyHeaderId() {
        return (Number) getAttributeInternal(CNTRVERIFYHEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CntrVerifyHeaderId.
     * @param value value to set the  CntrVerifyHeaderId
     */
    public void setCntrVerifyHeaderId(Number value) {
        setAttributeInternal(CNTRVERIFYHEADERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProjectId.
     * @return the ProjectId
     */
    public Number getProjectId() {
        return (Number) getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProjectId.
     * @param value value to set the  ProjectId
     */
    public void setProjectId(Number value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CntrId.
     * @return the CntrId
     */
    public Number getCntrId() {
        return (Number) getAttributeInternal(CNTRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CntrId.
     * @param value value to set the  CntrId
     */
    public void setCntrId(Number value) {
        setAttributeInternal(CNTRID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CntrNumber.
     * @return the CntrNumber
     */
    public String getCntrNumber() {
        return (String) getAttributeInternal(CNTRNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CntrNumber.
     * @param value value to set the  CntrNumber
     */
    public void setCntrNumber(String value) {
        setAttributeInternal(CNTRNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute VerifyStartDate.
     * @return the VerifyStartDate
     */
    public Date getVerifyStartDate() {
        return (Date) getAttributeInternal(VERIFYSTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute VerifyStartDate.
     * @param value value to set the  VerifyStartDate
     */
    public void setVerifyStartDate(Date value) {
        setAttributeInternal(VERIFYSTARTDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CntrName.
     * @return the CntrName
     */
    public String getCntrName() {
        return (String) getAttributeInternal(CNTRNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CntrName.
     * @param value value to set the  CntrName
     */
    public void setCntrName(String value) {
        setAttributeInternal(CNTRNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CustomerName.
     * @return the CustomerName
     */
    public String getCustomerName() {
        return (String) getAttributeInternal(CUSTOMERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustomerName.
     * @param value value to set the  CustomerName
     */
    public void setCustomerName(String value) {
        setAttributeInternal(CUSTOMERNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CustomerNumber.
     * @return the CustomerNumber
     */
    public String getCustomerNumber() {
        return (String) getAttributeInternal(CUSTOMERNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustomerNumber.
     * @param value value to set the  CustomerNumber
     */
    public void setCustomerNumber(String value) {
        setAttributeInternal(CUSTOMERNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProjectNumber.
     * @return the ProjectNumber
     */
    public String getProjectNumber() {
        return (String) getAttributeInternal(PROJECTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProjectNumber.
     * @param value value to set the  ProjectNumber
     */
    public void setProjectNumber(String value) {
        setAttributeInternal(PROJECTNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProjectName.
     * @return the ProjectName
     */
    public String getProjectName() {
        return (String) getAttributeInternal(PROJECTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProjectName.
     * @param value value to set the  ProjectName
     */
    public void setProjectName(String value) {
        setAttributeInternal(PROJECTNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute VerifyEndDate.
     * @return the VerifyEndDate
     */
    public Date getVerifyEndDate() {
        return (Date) getAttributeInternal(VERIFYENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute VerifyEndDate.
     * @param value value to set the  VerifyEndDate
     */
    public void setVerifyEndDate(Date value) {
        setAttributeInternal(VERIFYENDDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocumentNumber.
     * @return the DocumentNumber
     */
    public String getDocumentNumber() {
        return (String) getAttributeInternal(DOCUMENTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocumentNumber.
     * @param value value to set the  DocumentNumber
     */
    public void setDocumentNumber(String value) {
        setAttributeInternal(DOCUMENTNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CustomerId.
     * @return the CustomerId
     */
    public Number getCustomerId() {
        return (Number) getAttributeInternal(CUSTOMERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustomerId.
     * @param value value to set the  CustomerId
     */
    public void setCustomerId(Number value) {
        setAttributeInternal(CUSTOMERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OwerConfirmQuantity.
     * @return the OwerConfirmQuantity
     */
    public Number getOwerConfirmQuantity() {
        return (Number) getAttributeInternal(OWERCONFIRMQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OwerConfirmQuantity.
     * @param value value to set the  OwerConfirmQuantity
     */
    public void setOwerConfirmQuantity(Number value) {
        setAttributeInternal(OWERCONFIRMQUANTITY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ActualConfirmDate.
     * @return the ActualConfirmDate
     */
    public Date getActualConfirmDate() {
        return (Date) getAttributeInternal(ACTUALCONFIRMDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ActualConfirmDate.
     * @param value value to set the  ActualConfirmDate
     */
    public void setActualConfirmDate(Date value) {
        setAttributeInternal(ACTUALCONFIRMDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AlreadyConfirmAmount.
     * @return the AlreadyConfirmAmount
     */
    public Number getAlreadyConfirmAmount() {
        return (Number) getAttributeInternal(ALREADYCONFIRMAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AlreadyConfirmAmount.
     * @param value value to set the  AlreadyConfirmAmount
     */
    public void setAlreadyConfirmAmount(Number value) {
        setAttributeInternal(ALREADYCONFIRMAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LeftConfirmAmount.
     * @return the LeftConfirmAmount
     */
    public Number getLeftConfirmAmount() {
        return (Number) getAttributeInternal(LEFTCONFIRMAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LeftConfirmAmount.
     * @param value value to set the  LeftConfirmAmount
     */
    public void setLeftConfirmAmount(Number value) {
        setAttributeInternal(LEFTCONFIRMAMOUNT, value);
    }


    /**
     * Gets the attribute value for the calculated attribute CurrentTransferAmount.
     * @return the CurrentTransferAmount
     */
    public Number getCurrentTransferAmount() {
        return (Number) getAttributeInternal(CURRENTTRANSFERAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrentTransferAmount.
     * @param value value to set the  CurrentTransferAmount
     */
    public void setCurrentTransferAmount(Number value) {
        setAttributeInternal(CURRENTTRANSFERAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrentLeftConfirmAmount.
     * @return the CurrentLeftConfirmAmount
     */
    public Number getCurrentLeftConfirmAmount() {
        return ((BmCntrConfirmVOImpl)getViewObject()).getCurrentLeftConfirmAmount();
   //     return (Number) getAttributeInternal(CURRENTLEFTCONFIRMAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrentLeftConfirmAmount.
     * @param value value to set the  CurrentLeftConfirmAmount
     */
    public void setCurrentLeftConfirmAmount(Number value) {
        setAttributeInternal(CURRENTLEFTCONFIRMAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrentAlreadyConfirmAmount.
     * @return the CurrentAlreadyConfirmAmount
     */
    public Number getCurrentAlreadyConfirmAmount() {
        return ((BmCntrConfirmVOImpl)getViewObject()).getCurrentAlreadyConfirmAmount();

     //   return (Number) getAttributeInternal(CURRENTALREADYCONFIRMAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrentAlreadyConfirmAmount.
     * @param value value to set the  CurrentAlreadyConfirmAmount
     */
    public void setCurrentAlreadyConfirmAmount(Number value) {
        setAttributeInternal(CURRENTALREADYCONFIRMAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrentAllTransferAmount.
     * @return the CurrentAllTransferAmount
     */
    public Number getCurrentAllTransferAmount() {
        return ((BmCntrConfirmVOImpl)getViewObject()).getCurrentAllTransferAmount();

      //  return (Number) getAttributeInternal(CURRENTALLTRANSFERAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrentAllTransferAmount.
     * @param value value to set the  CurrentAllTransferAmount
     */
    public void setCurrentAllTransferAmount(Number value) {
        setAttributeInternal(CURRENTALLTRANSFERAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrentOwerConfirmQuantity.
     * @return the CurrentOwerConfirmQuantity
     */
    public Number getCurrentOwerConfirmQuantity() {
        return ((BmCntrConfirmVOImpl)getViewObject()).getCurrentOwerConfirmQuantity();

       // return (Number) getAttributeInternal(CURRENTOWERCONFIRMQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrentOwerConfirmQuantity.
     * @param value value to set the  CurrentOwerConfirmQuantity
     */
    public void setCurrentOwerConfirmQuantity(Number value) {
        setAttributeInternal(CURRENTOWERCONFIRMQUANTITY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransferStatus.
     * @return the TransferStatus
     */
    public String getTransferStatus() {
        return (String) getAttributeInternal(TRANSFERSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransferStatus.
     * @param value value to set the  TransferStatus
     */
    public void setTransferStatus(String value) {
        setAttributeInternal(TRANSFERSTATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FinConfirmDocumentNumber.
     * @return the FinConfirmDocumentNumber
     */
    public String getFinConfirmDocumentNumber() {
        return (String) getAttributeInternal(FINCONFIRMDOCUMENTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FinConfirmDocumentNumber.
     * @param value value to set the  FinConfirmDocumentNumber
     */
    public void setFinConfirmDocumentNumber(String value) {
        setAttributeInternal(FINCONFIRMDOCUMENTNUMBER, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> StmCustomersAndSitsLovVO1.
     */
    public RowSet getStmCustomersAndSitsLovVO1() {
        return (RowSet)getAttributeInternal(STMCUSTOMERSANDSITSLOVVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> StatusLookupLovVO1.
     */
    public RowSet getStatusLookupLovVO1() {
        return (RowSet)getAttributeInternal(STATUSLOOKUPLOVVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> BmCntrCustomersLovVO1.
     */
    public RowSet getBmCntrCustomersLovVO1() {
        return (RowSet)getAttributeInternal(BMCNTRCUSTOMERSLOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> StmBmConfirmedContractLovVO1.
     */
    public RowSet getStmBmConfirmedContractLovVO1() {
        return (RowSet)getAttributeInternal(STMBMCONFIRMEDCONTRACTLOVVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
